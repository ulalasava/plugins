(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{164:function(t,s,a){t.exports=a.p+"assets/img/developer-mode.4506fc13.png"},165:function(t,s,a){t.exports=a.p+"assets/img/add-a-local-plugin.27bcfe0a.png"},166:function(t,s,a){t.exports=a.p+"assets/img/local-plugin-added.1be7b114.png"},167:function(t,s,a){t.exports=a.p+"assets/img/hello-world-alert.3a89290c.png"},168:function(t,s,a){t.exports=a.p+"assets/img/help-screen.42dc941b.png"},180:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"_5-minute-quick-start"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-minute-quick-start","aria-hidden":"true"}},[t._v("#")]),t._v(" 5 Minute Quick Start")]),t._v(" "),n("h2",{attrs:{id:"hello-world-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-plugin","aria-hidden":"true"}},[t._v("#")]),t._v(" Hello World Plugin")]),t._v(" "),n("p",[t._v('Let\'s create a simple "Hello World" plugin that responds with a JavaScript alert "Hello, Developer!" when a user says '),n("span",{staticClass:"voice-cmd"},[t._v("hello world")]),t._v(" on a tab with a *.lipsurf.com domain.")]),t._v(" "),n("ol",[n("li",[t._v("Clone the community plugins repository and change into the directory.")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git clone https://github.com/LipSurf/plugins.git lipsurf-plugins\ncd lipsurf-plugins\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("Install the dependencies.")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm install\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Create a folder named "),n("code",[t._v("HelloWorld")]),t._v(" with a "),n("code",[t._v("HelloWorld.ts")]),t._v(" file in it with the following contents:")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("It's important to keep the capitalization consistent. The case-sensitive namespace must always end in "),n("code",[t._v("Plugin")]),t._v(" (eg. "),n("code",[t._v("HelloWorldPlugin")]),t._v(") and\nthe folder and file name should have the same name and capitalization (without the "),n("code",[t._v("Plugin")]),t._v(" suffix).")])]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("PROTIP")]),t._v(" "),n("p",[t._v("Rather than copy-pasting, it's better to type out the code to force yourself to grasp it's intuitive structure and contents better.")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// lipsurf-plugins/src/HelloWorld/HelloWorld.ts")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('/// <reference path="../@types/plugin-interface.d.ts"/>')]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" HelloWorldPlugin "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" PluginBase"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IPlugin"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Plugin "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("assign")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PluginBase"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        niceName"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        description"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'A hello world plugin that works on the lipsurf.com domain.'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// a RegEx that must match against the current tab's url for the plugin to be active (all of it's commands minus global commands)")]),t._v("\n        match"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token regex"}},[t._v("/.*\\.lipsurf.com/")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        version"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'1.0.0'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        commands"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Respond'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            description"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Respond with something very insightful to the user'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// what the user actually has to say to run this command")]),t._v("\n            match"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// the js that's run on the page")]),t._v("\n            pageFn"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{attrs:{class:"token function"}},[t._v("alert")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello, Developer!'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("The meat of the plugin lives in the array of commands. Each "),n("a",{attrs:{href:"/api-reference/command"}},[t._v("Command")]),t._v(" object has a "),n("code",[t._v("match")]),t._v(" property for what the user needs to say to run it, a "),n("code",[t._v("pageFn")]),t._v(" property for the code that's actually run and a bunch of meta properties like "),n("code",[t._v("name")]),t._v(", "),n("code",[t._v("description")]),t._v(" etc.")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("Since we're doing the example in TypeScript, we need to compile down to JavaScript.")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm run watch\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),n("p",[t._v("This will watch our *.ts files for changes and compile them to JavaScript whenever a change is detected üòÉ")])]),t._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[n("p",[t._v("Time to "),n("em",[t._v("load 'er up")]),t._v('. Open up Google Chrome and right click the LipSurf icon then "Options".')])]),t._v(" "),n("li",[n("p",[t._v('Turn on "Developer mode" by checking its box.')])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(164),alt:"Screenshot of developer mode setting"}})]),t._v(" "),n("ol",{attrs:{start:"7"}},[n("li",[t._v('Click "Add a Local Plugin" under "Plugins" and navigate to the compiled '),n("code",[t._v(".js")]),t._v(" file (eg. "),n("code",[t._v("plugins/build/HelloWorld.js")]),t._v(").")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(165),alt:'Screenshot of the "Add a local plugin" button.'}})]),t._v(" "),n("br"),t._v(" "),n("p",[t._v("üèÅ ¬†¬†  "),n("strong",[t._v("That's it!")]),t._v("  ¬†¬† üèÅ")]),t._v(" "),n("br"),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"verifying"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verifying","aria-hidden":"true"}},[t._v("#")]),t._v(" Verifying")]),t._v(" "),n("p",[t._v("After a few seconds your plugin should appear in the plugins list if there were no installation problems.")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("Check the developer console (<F12>) for hints if there are installation issues.")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(166),alt:"Screenshot of the HelloWorld plugin in the list of plugins"}})]),t._v(" "),n("p",[t._v("Now try saying "),n("span",{staticClass:"voice-cmd"},[t._v("hello world")]),t._v(" on this tab (since this tab has a lipsurf.com domain it will match our url pattern).")]),t._v(" "),n("p",[t._v("If everything went smoothly, you should see a JavaScript alert like this one:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(167),alt:'Screenshot of "Hello, Developer!" alert box'}})]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("You can also say "),n("span",{staticClass:"voice-cmd"},[t._v("help")]),t._v(" to see your new command listed in the auto-generated help cheat-sheet.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(168),alt:'Screenshot of help cheat-sheet that now includes new "hello world" command'}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"what-s-next"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-s-next","aria-hidden":"true"}},[t._v("#")]),t._v(" What's Next")]),t._v(" "),n("p",[t._v("If you think that's nifty, we've just scratched the surface! LipSurf can handle homophones, dynamic match commands, multiple languages and more!")]),t._v(" "),n("p",[t._v('Check out the "Advanced" topics after you\'ve regained composure from all the excitement this is generating!')])])}],e=a(0),o=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);o.options.__file="quick-start.md";s.default=o.exports}}]);